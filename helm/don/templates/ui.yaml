{{ with set . "component" "ui" }}
apiVersion: apps/v1
kind: Deployment
metadata: {{ include "don.common.metadata" . | nindent 2 }}
spec:
  replicas: {{.Values.replicas}}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels: {{ include "don.common.metadata-labels" . | nindent 6 }}
  template:
    metadata:
      labels: {{ include "don.common.metadata-labels" . | nindent 8 }}
    spec:
      containers:
        - name: ui
          image: {{.Values.uiImage | quote}}
          imagePullPolicy: {{.Values.imagePullPolicy}}
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata: {{ include "don.common.metadata" . | nindent 2 }}
spec:
  selector: {{ include "don.common.metadata-labels" . | nindent 4 }}
  ports:
    - name: http
      protocol: TCP
      port: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata: {{ include "don.common.metadata" . | nindent 2 }}
  annotations:
    # Traefik is the default ingress provider in our setup
    ingress.kubernetes.io/frame-deny: "true"
    ingress.kubernetes.io/content-type-nosniff: "true"
    ingress.kubernetes.io/browser-xss-filter: "true"
    ingress.kubernetes.io/referrer-policy: "same-origin"
    ingress.kubernetes.io/content-security-policy: "default-src 'self'; connect-src https:; img-src 'self' data:; style-src 'self' 'unsafe-inline'; object-src 'none'; worker-src 'self' blob:; child-src 'self' blob:;"
    ingress.kubernetes.io/hsts-max-age: "315360000"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - secretName: ingress-tls
      hosts:
        - {{.Values.domain}}
  rules:
    - host: {{.Values.domain}}
      http:
        paths:
          - path: /
            backend:
              serviceName: ui
              servicePort: http
          - path: /api/
            backend:
              serviceName: api
              servicePort: http
          - path: /admin
            backend:
              serviceName: api
              servicePort: http
          - path: /docs
            backend:
              serviceName: docs
              servicePort: http
{{ end }}
