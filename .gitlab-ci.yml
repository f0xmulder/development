stages:
  - test
  - validate
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ui/node_modules/

ui unit tests:
  image: node:10.15.1-alpine
  stage: test
  before_script:
    - cd ui/
    - npm install
  script:
    - npm test -- --coverage
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    expire_in: 1 month
    paths:
      - ui/coverage

api unit tests:
  image: golang:1.11.5
  stage: test
  script:
    - go test $(go list ./api/...) -v -coverprofile coverage.out
    - go tool cover -html=coverage.out -o api/coverage.html
  coverage: /^coverage:\s(\d+(?:\.\d+)?%)/
  artifacts:
    expire_in: 1 month
    paths:
      - api/coverage.html

validate unit tests:
  image: golang:1.11.5
  stage: test
  script:
    - go test $(go list ./validate/...) -v -coverprofile coverage.out
    - go tool cover -html=coverage.out -o validate/coverage.html
  coverage: /^coverage:\s(\d+(?:\.\d+)?%)/
  artifacts:
    expire_in: 1 month
    paths:
      - validate/coverage.html

validate API definitions:
  image: golang:1.11.5
  stage: validate
  before_script:
    - cd validate
  script:
    - go run ./cmd/don-validate/main.go

.deploy:
  stage: deploy
  tags:
    - nlx-privileged
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - skaffold run --profile release --profile deploy-${CI_ENVIRONMENT_NAME}

deploy prod:
  extends: .deploy
  environment:
    name: prod
  when: manual
  only:
    - tags

docker tag latest:
  stage: deploy
  tags:
    - nlx-privileged
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - skaffold build --profile release | ./docker-tag-latest.awk
  when: manual
  only:
    - tags
