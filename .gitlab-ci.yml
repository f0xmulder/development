image: docker:stable

stages:
  - validate
  - test
  - release
  - review
  - deploy
  - e2e-tests

variables:
  IMAGE_PREFIX: "$CI_REGISTRY/$CI_PROJECT_PATH"
  INGRESS_BASE_DOMAIN: developer.overheid.nl

.validate:
  image: golang:1.12.5
  before_script:
    - cd validate
  tags:
    - docker
    - nlx

Test validate:
  extends: .validate
  stage: test
  script:
    - go test ./... -coverprofile coverage.out
    - go tool cover -func=coverage.out
  coverage: /total:\t+\(statements\)\t+([\d\.]+?%)/
  artifacts:
    expire_in: 1 month
    paths:
      - validate/coverage.html

validate API definitions:
  extends: .validate
  stage: validate
  script:
    - go run ./cmd/don-validate/main.go

## UI ##
.ui:
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - export UI_IMAGE=${IMAGE_PREFIX}/ui
  tags:
    - docker
    - nlx

Test UI:
  extends: .ui
  stage: test
  script:
    - |
        docker build --target build \
        --tag $UI_IMAGE:$CI_COMMIT_SHORT_SHA-build \
        -f ui/Dockerfile . && \
        docker run --rm $UI_IMAGE:$CI_COMMIT_SHORT_SHA-build \
        /bin/ash -c "npm run lint && npm run test -- --coverage"
  coverage: /All\sfiles.*?\s+(\d+.\d+)/

Release UI:
  extends: .ui
  stage: release
  script:
    - |
        docker build \
        --tag $UI_IMAGE:$CI_COMMIT_SHORT_SHA \
        --tag $UI_IMAGE:$CI_COMMIT_REF_SLUG \
        -f ui/Dockerfile . && \
        docker push $UI_IMAGE:$CI_COMMIT_SHORT_SHA && \
        docker push $UI_IMAGE:$CI_COMMIT_REF_SLUG

## API ##
.api:
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - export API_IMAGE=${IMAGE_PREFIX}/api
  tags:
    - docker
    - nlx

Test API:
  extends: .api
  stage: test
  script:
    - |
        docker build --target build \
        --tag $API_IMAGE:$CI_COMMIT_SHORT_SHA-build \
        -f api/Dockerfile . && \
        docker run --rm $API_IMAGE:$CI_COMMIT_SHORT_SHA-build \
        /bin/ash -c "go test ./... -coverprofile coverage.out && go tool cover -func=coverage.out"
  coverage: /total:\t+\(statements\)\t+([\d\.]+?%)/

Release API:
  extends: .api
  stage: release
  script:
    - |
        docker build \
        --tag $API_IMAGE:$CI_COMMIT_SHORT_SHA \
        --tag $API_IMAGE:$CI_COMMIT_REF_SLUG \
        -f api/Dockerfile . && \
        docker push $API_IMAGE:$CI_COMMIT_SHORT_SHA && \
        docker push $API_IMAGE:$CI_COMMIT_REF_SLUG

Deploy Review App:
  stage: review
  image: registry.gitlab.com/commonground/don-deployer:latest
  script:
    - echo -e -n "https://$CI_ENVIRONMENT_SLUG.$INGRESS_BASE_DOMAIN" > ci_environment_url.txt
    - |
        helm upgrade --install don-$CI_ENVIRONMENT_SLUG ./helm/don \
        --namespace don-$CI_ENVIRONMENT_SLUG \
        --set-string "gitlabProjectId=$GITLAB_PROJECT_ID" \
        --set "gitlabUrl=$GITLAB_URL" \
        --set "gitlabAccessToken=$GITLAB_ACCESS_TOKEN" \
        --set "apiImage=$IMAGE_PREFIX/api:$CI_COMMIT_SHORT_SHA" \
        --set "uiImage=$IMAGE_PREFIX/ui:$CI_COMMIT_SHORT_SHA" \
        --set domain=$CI_ENVIRONMENT_SLUG.$INGRESS_BASE_DOMAIN
  environment:
    name: $CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.$INGRESS_BASE_DOMAIN
    on_stop: Remove Review App
  tags:
    - cluster
    - kubernetes
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  only:
    - /^feature\/.*$/
  except:
    - master
  artifacts:
    paths:
      - ci_environment_url.txt

Remove Review App:
  stage: review
  image: registry.gitlab.com/commonground/don-deployer:latest
  variables:
    GIT_STRATEGY: none
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2
  script:
    - helm delete --purge don-$CI_ENVIRONMENT_SLUG
  when: manual
  environment:
    name: $CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.$INGRESS_BASE_DOMAIN
    action: stop
  tags:
    - cluster
    - kubernetes
  services:
    - docker:dind
  only:
    - /^feature\/.*$/
  except:
    - master

E2E tests:
  stage: e2e-tests
  before_script:
    - export URL=$([ -f ci_environment_url.txt ] && cat ci_environment_url.txt || echo "https://$INGRESS_BASE_DOMAIN")
    - export E2E_IMAGE=${IMAGE_PREFIX}/e2e
  script:
    - |
      docker build --tag $E2E_IMAGE:$CI_COMMIT_SHORT_SHA \
      -f e2e-tests/Dockerfile . && \
      docker run --rm --cap-add=SYS_ADMIN \
      -e URL=${URL} \
      $E2E_IMAGE:$CI_COMMIT_SHORT_SHA \
      /bin/sh -c "./wait-for-http.sh $URL && npm test"
  tags:
    - docker
    - nlx

Deploy test:
  stage: deploy
  script:
    - |
        helm upgrade --install don-test ./helm/don \
        --namespace don-test \
        --set-string "gitlabProjectId=$GITLAB_PROJECT_ID" \
        --set "gitlabUrl=$GITLAB_URL" \
        --set "gitlabAccessToken=$GITLAB_ACCESS_TOKEN" \
        --set "apiImage=$IMAGE_PREFIX/api:$CI_COMMIT_SHORT_SHA" \
        --set "uiImage=$IMAGE_PREFIX/ui:$CI_COMMIT_SHORT_SHA" \
        --set domain="test.$INGRESS_BASE_DOMAIN" \
        --set "ingressClass=traefik"
  environment:
    name: prod
    url: https://test.$INGRESS_BASE_DOMAIN
  tags:
    - nlx-privileged
    - shell
  only:
    - master
    
Deploy production:
  stage: deploy
  script:
    - |
        helm upgrade --install don-prod ./helm/don \
        --namespace don-prod \
        --set-string "gitlabProjectId=$GITLAB_PROJECT_ID" \
        --set "gitlabUrl=$GITLAB_URL" \
        --set "gitlabAccessToken=$GITLAB_ACCESS_TOKEN" \
        --set "apiImage=$IMAGE_PREFIX/api:$CI_COMMIT_SHORT_SHA" \
        --set "uiImage=$IMAGE_PREFIX/ui:$CI_COMMIT_SHORT_SHA" \
        --set domain="$INGRESS_BASE_DOMAIN" \
        --set "ingressClass=traefik"
  environment:
    name: prod
    url: https://$INGRESS_BASE_DOMAIN
  tags:
    - nlx-privileged
    - shell
  only:
    - master
