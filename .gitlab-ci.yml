image: docker:stable

services:
  - docker:dind

stages:
  - validate
  - build
  - test
  - release
  - review
  - e2e-tests
  - deploy

variables:
  IMAGE_PREFIX: "$CI_REGISTRY/$CI_PROJECT_PATH"
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375

.validate:
  image: golang:1.11.5
  before_script:
    - cd validate
  only:
    changes:
      - data/**/*
      - validate/**/*

validate unit tests:
  extends: .validate
  stage: test
  script:
    - go test $(go list ./...) -v -coverprofile coverage.out
  coverage: /^coverage:\s(\d+(?:\.\d+)?%)/

validate API definitions:
  extends: .validate
  stage: validate
  script:
    - go run ./cmd/don-validate/main.go

## UI ##
.ui:
  only:
    changes:
      - ui/**/*
  tags:
    - cluster
    - kubernetes
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - export IMAGE_UI=${IMAGE_PREFIX}/ui

Build UI:
  extends: .ui
  stage: build
  script:
    - docker pull $IMAGE_UI:master || true
    - docker pull $IMAGE_UI:${CI_COMMIT_REF_SLUG}-build || true
    - docker build --target build --cache-from $IMAGE_UI:$CI_COMMIT_REF_SLUG --tag $IMAGE_UI:${CI_COMMIT_SHA}-tmp --tag $IMAGE_UI:${CI_COMMIT_REF_SLUG}-build -f ui/Dockerfile .
    - docker push $IMAGE_UI:${CI_COMMIT_SHA}-tmp
    - docker push $IMAGE_UI:${CI_COMMIT_REF_SLUG}-build

Test UI:
  extends: .ui
  stage: test
  script:
    - docker pull $IMAGE_UI:${CI_COMMIT_SHA}-tmp
    - docker run $IMAGE_UI:${CI_COMMIT_SHA}-tmp npm test -- --coverage
  coverage: /All\sfiles.*?\s+(\d+.\d+)/

Release UI:
  extends: .ui
  stage: release
  script:
    - docker pull $IMAGE_UI:${CI_COMMIT_SHA}-tmp
    - docker build --target webserver --cache-from $IMAGE_UI:${CI_COMMIT_SHA}-tmp --tag $IMAGE_UI:$CI_COMMIT_SHA --tag $IMAGE_UI:$CI_COMMIT_REF_SLUG -f ui/Dockerfile .
    - docker push $IMAGE_UI:$CI_COMMIT_SHA
    - docker push $IMAGE_UI:$CI_COMMIT_REF_SLUG

## API ##
.api:
  only:
    changes:
      - api/**/*
  tags:
    - cluster
    - kubernetes
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - export IMAGE_API=${IMAGE_PREFIX}/api

Build API:
  extends: .api
  stage: build
  script:
    - docker pull $IMAGE_API:master || true
    - docker pull $IMAGE_API:${CI_COMMIT_REF_SLUG}-build || true
    - docker build --target build --cache-from $IMAGE_API:$CI_COMMIT_REF_SLUG --tag $IMAGE_API:${CI_COMMIT_SHA}-tmp --tag $IMAGE_API:${CI_COMMIT_REF_SLUG}-build -f api/Dockerfile .
    - docker push $IMAGE_API:${CI_COMMIT_SHA}-tmp
    - docker push $IMAGE_API:${CI_COMMIT_REF_SLUG}-build

Test API:
  extends: .api
  stage: test
  script:
    - docker pull $IMAGE_API:${CI_COMMIT_SHA}-tmp
    - docker run $IMAGE_API:${CI_COMMIT_SHA}-tmp go test -v -coverprofile coverage.out ./...
  coverage: /^coverage:\s(\d+(?:\.\d+)?%)/

Release API:
  extends: .api
  stage: release
  script:
    - docker pull $IMAGE_API:${CI_COMMIT_SHA}-tmp
    - docker build --cache-from $IMAGE_API:${CI_COMMIT_SHA}-tmp --tag $IMAGE_API:$CI_COMMIT_SHA --tag $IMAGE_API:$CI_COMMIT_REF_SLUG -f api/Dockerfile .
    - docker push $IMAGE_API:$CI_COMMIT_SHA
    - docker push $IMAGE_API:$CI_COMMIT_REF_SLUG

Deploy Review App:
  stage: review
  image: registry.gitlab.com/commonground/don-deployer:latest
  script:
    - helm upgrade --install don-$CI_ENVIRONMENT_SLUG ./helm/don --namespace don-$CI_ENVIRONMENT_SLUG --set-string "gitlabProjectId=$GITLAB_PROJECT_ID" --set "gitlabUrl=$GITLAB_URL" --set "gitlabAccessToken=$GITLAB_ACCESS_TOKEN" --set "imagePullPolicy=Always" --set "apiImage=$IMAGE_PREFIX/api:$CI_COMMIT_REF_SLUG" --set "uiImage=$IMAGE_PREFIX/ui:$CI_COMMIT_REF_SLUG" --set domain=$CI_ENVIRONMENT_SLUG.$KUBE_INGRESS_BASE_DOMAIN
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.$KUBE_INGRESS_BASE_DOMAIN
    on_stop: Remove Review App
  tags:
    - cluster
    - kubernetes
  only:
    - /^feature\/.*$/
  except:
    - master

Remove Review App:
  stage: review
  image: registry.gitlab.com/commonground/don-deployer:latest
  variables:
    GIT_STRATEGY: none
  script:
    - helm delete --purge don-$CI_ENVIRONMENT_SLUG
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.$KUBE_INGRESS_BASE_DOMAIN
    action: stop
  tags:
    - cluster
    - kubernetes
  only:
    - /^feature\/.*$/
  except:
    - master

E2E tests:
  image: buildkite/puppeteer:latest
  stage: e2e-tests
  before_script:
    - export URL=$(cat ci_environment_url.txt)
    - cd e2e-tests
    - npm install
  script:
    - npm test
  artifacts:
    expire_in: 1 month
    paths:
      - e2e-tests/screenshots

Deploy production:
  stage: deploy
  script:
    - helm upgrade --install don-prod ./helm/don --namespace don-prod --set-string "gitlabProjectId=$GITLAB_PROJECT_ID" --set "gitlabUrl=$GITLAB_URL" --set "gitlabAccessToken=$GITLAB_ACCESS_TOKEN" --set "imagePullPolicy=Always" --set "apiImage=$IMAGE_PREFIX/api:$CI_COMMIT_REF_SLUG" --set "uiImage=$IMAGE_PREFIX/ui:$CI_COMMIT_REF_SLUG" --set "ingressClass=traefik" --set domain=don.commonground.nl
  environment:
    name: prod
    url: https://don.commonground.nl
  tags:
    - nlx-privileged
  only:
    - master
