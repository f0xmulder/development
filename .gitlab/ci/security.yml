include:
  - template: Security/Container-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: Secret-Detection.gitlab-ci.yml

container_scanning:
  stage: security
  variables:
    DOCKER_USER: gitlab-ci-token
    DOCKER_PASSWORD: $CI_JOB_TOKEN
  before_script:
    - export IMAGE="registry.gitlab.com/commonground/don/developer.overheid.nl/api:${CI_COMMIT_SHORT_SHA}"
    - export DOCKER_IMAGE="$IMAGE"
  script:
    - gtcs scan
  rules:
    - when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

container_scanning_ui:
  extends: container_scanning
  stage: security
  variables:
    DOCKER_USER: gitlab-ci-token
    DOCKER_PASSWORD: $CI_JOB_TOKEN
  before_script:
    - export IMAGE="registry.gitlab.com/commonground/don/developer.overheid.nl/ui:${CI_COMMIT_SHORT_SHA}"
    - export DOCKER_IMAGE="$IMAGE"
  script:
    - gtcs scan

container_scanning_docs:
  extends: container_scanning
  stage: security
  variables:
    DOCKER_USER: gitlab-ci-token
    DOCKER_PASSWORD: $CI_JOB_TOKEN
  before_script:
    - export IMAGE="registry.gitlab.com/commonground/don/developer.overheid.nl/docs:${CI_COMMIT_SHORT_SHA}"
    - export DOCKER_IMAGE="$IMAGE"
  script:
    - gtcs scan

container_scanning_linkchecker:
  extends: container_scanning
  stage: security
  variables:
    DOCKER_USER: gitlab-ci-token
    DOCKER_PASSWORD: $CI_JOB_TOKEN
  before_script:
    - export IMAGE="registry.gitlab.com/commonground/don/developer.overheid.nl/linkchecker:${CI_COMMIT_SHORT_SHA}"
    - export DOCKER_IMAGE="$IMAGE"
  script:
    - gtcs scan

dependency_scanning:
  stage: security


.secret-analyzer:
  stage: security

secret_detection:
  rules:
    - when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

retire-js-dependency_scanning:
  variables:
    SECURE_LOG_LEVEL: debug
  before_script:
    # For building mozjpeg in /docs
    - apk add autoconf automake libtool gcc libc-dev pkgconf nasm make
    - apk add jq
    - mkdir -p tmp/docs tmp/e2e-tests tmp/ui
  script:
    - /analyzer run --target-dir docs --artifact-dir tmp/docs
    - /analyzer run --target-dir e2e-tests --artifact-dir tmp/e2e-tests
    - /analyzer run --target-dir ui --artifact-dir tmp/ui
  after_script:
    # Combine the reports
    - jq -s '.[0].version as $version | [.[] | to_entries] | flatten | reduce .[] as $dot ({}; .[$dot.key] += $dot.value) | .version = $version' tmp/*/gl-dependency-scanning-report.json > gl-dependency-scanning-report.json
  rules:
    - when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

gemnasium-python-dependency_scanning:
  variables:
    SECURE_LOG_LEVEL: debug
  script:
    - /analyzer run --target-dir api
  rules:
    - when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

gemnasium-dependency_scanning:
  rules:
    - when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

sast:
  stage: security

bandit-sast:
  rules:
    - when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
eslint-sast:
  rules:
    - when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
nodejs-scan-sast:
  rules:
    - when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

gosec-sast:
  variables:
    SECURE_LOG_LEVEL: debug
  script:
    - /analyzer run --target-dir linkchecker
  rules:
    - when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

semgrep-sast:
  rules:
    - when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'