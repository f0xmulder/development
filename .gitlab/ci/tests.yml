Lint and test API:
  image: python:3.8
  stage: test
  services:
  - postgres:11.6-alpine
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    DB_HOST: postgres
    DB_USER: postgres
    DB_PASSWORD: postgres
    DB_NAME: postgres
    SECRET_KEY: somethingverysecret
  cache:
    paths:
    - "$CI_PROJECT_DIR/.cache/pip"
  before_script:
    - cd api/
    - pip3 install -r requirements-dev.txt
  script:
    - python3 -m prospector
    - python3 -m coverage run --source='.' manage.py test core
    - python3 -m coverage report && python -m coverage html
  coverage: "/TOTAL.+ ([0-9]{1,3}%)/"
  artifacts:
    expire_in: 1 month
    paths:
    - api/htmlcov
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH && $CI_PROJECT_PATH == "commonground/don/developer.overheid.nl"' # do not run for tags

Verify test schema:
  image: python:3.8
  stage: test
  services:
    - postgres:11.6-alpine
  variables:
    DB_HOST: postgres
    DB_USER: postgres
    DB_PASSWORD: postgres
    DB_NAME: postgres
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    TESTDATA: "../linkchecker/testdata"
  cache:
    paths:
    - "$CI_PROJECT_DIR/.cache/pip"
  before_script:
    - apt-get update
    - apt-get install -qy postgresql-client-11
    - cd api/
    - pip3 install -r requirements-dev.txt
  script:
    - python manage.py migrate
    - 'PGPASSWORD="$DB_PASSWORD" pg_dump -h "$DB_HOST" -U "$DB_USER" "$DB_NAME" --no-owner
      --schema-only -T django* -T auth* | sed ''/-- Dumped by /d'' > current_testschema.sql'
    - ls -l current_testschema.sql
    - |
      if ! diff -u $TESTDATA/testschema.sql current_testschema.sql
      then
        echo -e "\e[31mError: Non-matching test database schema! See docs/docs/developer.md#Data model changes on how to update it.\e[0m"
        exit 1
      fi
  artifacts:
    expire_in: 1 month
    when: always
    paths:
    - api/current_testschema.sql
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH && $CI_PROJECT_PATH == "commonground/don/developer.overheid.nl"' # do not run for tags

Test linkchecker:
  extends: .linkchecker
  image: golang:1.14.1
  stage: test
  services:
    - postgres:11.6-alpine
  variables:
    DB_HOST: postgres
    DB_USER: postgres
    DB_PASSWORD: postgres
    DB_NAME: postgres
    DB_TEST_NAME: postgres
    SECRET_KEY: somethingverysecret
    PGSSLMODE: disable
  script:
    - go test ./... -coverprofile coverage.out
    - go tool cover -html=coverage.out -o coverage.html
    - go tool cover -func=coverage.out
  coverage: "/total:\\t+\\(statements\\)\\t+([\\d\\.]+?%)/"
  artifacts:
    expire_in: 1 month
    paths:
    - linkchecker/coverage.html
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH && $CI_PROJECT_PATH == "commonground/don/developer.overheid.nl"' # do not run for tags
