Release API:
  extends: ".api"
  stage: release
  script:
    - |
      docker build \
      --tag $API_IMAGE:$CI_COMMIT_SHORT_SHA \
      --tag $API_IMAGE:$CI_COMMIT_REF_SLUG \
      -f api/Dockerfile . && \
      docker push $API_IMAGE:$CI_COMMIT_SHORT_SHA && \
      docker push $API_IMAGE:$CI_COMMIT_REF_SLUG
  coverage: "/total:\\t+\\(statements\\)\\t+([\\d\\.]+?%)/"


Test and release UI:
  extends: .ui
  stage: release
  script:
  - |
    docker build \
    --tag $UI_IMAGE:$CI_COMMIT_SHORT_SHA \
    --tag $UI_IMAGE:$CI_COMMIT_REF_SLUG \
    -f ui/Dockerfile . && \
    docker push $UI_IMAGE:$CI_COMMIT_SHORT_SHA && \
    docker push $UI_IMAGE:$CI_COMMIT_REF_SLUG
  coverage: "/All\\sfiles.*?\\s+(\\d+.\\d+)/"

Release Linkchecker:
  extends: .linkchecker
  stage: release
  before_script:
    - cd linkchecker
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - export LINKCHECKER_IMAGE=${IMAGE_PREFIX}/linkchecker
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  services:
    - docker:20.10-dind
  script:
    - |
      docker build \
      --tag $LINKCHECKER_IMAGE:$CI_COMMIT_SHORT_SHA \
      --tag $LINKCHECKER_IMAGE:$CI_COMMIT_REF_SLUG \
      . && \
      docker push $LINKCHECKER_IMAGE:$CI_COMMIT_SHORT_SHA && \
      docker push $LINKCHECKER_IMAGE:$CI_COMMIT_REF_SLUG

Release Docs:
  extends: .docs
  stage: release
  script:
    - |
      docker build \
      --tag $DOCS_IMAGE:$CI_COMMIT_SHORT_SHA \
      --tag $DOCS_IMAGE:$CI_COMMIT_REF_SLUG \
      -f docs/Dockerfile . && \
      docker push $DOCS_IMAGE:$CI_COMMIT_SHORT_SHA && \
      docker push $DOCS_IMAGE:$CI_COMMIT_REF_SLUG